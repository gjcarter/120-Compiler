#define typedef_name  -201
#define namespace_name -202
#define original_namespace_name  -203
#define class_name  -204
#define enum_name  -205
#define template_name -206
#define identifier  -207
#define literal  -208
#define integer_literal  -209
#define character_literal -210
#define floating_literal  -211
#define string_literal  -212
#define boolean_literal -213
#define program  -214
#define primary_expression  -215
#define id_expression -216
#define unqualified_id  -217
#define qualified_id  -218
#define nested_name_specifier -219
#define postfix_expression  -220
#define expression_list  -221
#define unary_expression -222
#define unary_operator  -223
#define new_expression  -224
#define new_placement  -225
#define new_type_id -226
#define new_declarator  -227
#define direct_new_declarator  -228
#define new_initializer -229
#define delete_expression  -230
#define cast_expression  -231
#define pm_expression -232
#define multiplicative_expression  -233
#define additive_expression  -234
#define shift_expression -235
#define relational_expression  -236
#define equality_expression  -237
#define and_expression -238
#define exclusive_or_expression  -239
#define inclusive_or_expression -240
#define logical_and_expression  -241
#define logical_or_expression -242
#define conditional_expression  -243
#define assignment_expression  -244
#define assignment_operator -245
#define expression  -246
#define constant_expression  -247
#define statement  -248
#define labeled_statement -249
#define expression_statement  -250
#define compound_statement  -251
#define statement_seq -252
#define selection_statement  -253
#define condition  -254
#define iteration_statement -255
#define for_init_statement  -256
#define jump_statement  -257
#define declaration_statement -258
#define declaration_seq  -259
#define declaration  -260
#define block_declaration -261
#define simple_declaration  -262
#define decl_specifier  -263
#define decl_specifier_seq -264
#define storage_class_specifier  -265
#define function_specifier  -266
#define type_specifier -267
#define simple_type_specifier  -268
#define type_name  -269
#define elaborated_type_specifier -270
#define enum_specifier  -271
#define enumerator_list  -272
#define enumerator_definition -273
#define enumerator  -274
#define namespace_definition  -275
#define named_namespace_definition -276
#define original_namespace_definition  -277
#define extension_namespace_definition -278
#define unnamed_namespace_definition  -279
#define namespace_body -280
#define namespace_alias_definition  -281
#define qualified_namespace_specifier -282
#define using_declaration  -283
#define using_directive  -284
#define asm_definition -285
#define linkage_specification  -286
#define init_declarator_list  -287
#define init_declarator -288
#define declarator  -289
#define direct_declarator  -290
#define ptr_operator  -291
#define cv_qualifier_seq -292
#define cv_qualifier  -293
#define declarator_id  -294
#define type_id  -295
#define type_specifier_seq -296
#define abstract_declarator  -297
#define direct_abstract_declarator -298
#define parameter_declaration_clause  -299
#define parameter_declaration_list -300
#define parameter_declaration  -301
#define function_definition  -302
#define function_body -303
#define initializer  -304
#define initializer_clause  -305
#define initializer_list -306
#define class_specifier  -307
#define class_head  -308
#define class_key  -309
#define member_specification -310
#define member_declaration  -311
#define member_declarator_list  -312
#define member_declarator -313
#define pure_specifier  -314
#define constant_initializer  -315
#define base_clause -316
#define base_specifier_list  -317
#define base_specifier  -318
#define access_specifier -319
#define conversion_function_id  -320
#define conversion_type_id  -321
#define conversion_declarator -322
#define ctor_initializer  -323
#define mem_initializer_list  -324
#define mem_initializer -325
#define mem_initializer_id  -326
#define operator_function_id  -327
#define operator -328
#define template_declaration  -329
#define template_parameter_list  -330
#define template_parameter -331
#define type_parameter  -332
#define template_id  -333
#define template_argument_list -334
#define template_argument  -335
#define explicit_instantiation  -336
#define explicit_specialization -337
#define try_block  -338
#define function_try_block  -339
#define handler_seq  -340
#define handler -341
#define exception_declaration  -342
#define throw_expression  -343
#define exception_specification -344
#define type_id_list  -345
#define declaration_seq_opt  -346
#define nested_name_specifier_opt -347
#define expression_list_opt  -348
#define COLONCOLON_opt  -349
#define new_placement_opt -350
#define new_initializer_opt  -351
#define new_declarator_opt  -352
#define expression_opt -353
#define statement_seq_opt  -354
#define condition_opt  -355
#define enumerator_list_opt -356
#define initializer_opt  -357
#define constant_expression_opt  -358
#define abstract_declarator_opt -359
#define type_specifier_seq_opt  -360
#define direct_abstract_declarator_opt -361
#define ctor_initializer_opt  -362
#define COMMA_opt  -363
#define member_specification_opt -364
#define SEMICOLON_opt  -365
#define conversion_declarator_opt  -366
#define EXPORT_opt -367
#define handler_seq_opt  -368
#define assignment_expression_opt  -369
#define type_id_list_opt -370
#define function_definition_1 -371
#define iteration_statement_3 -372
#define simple_declaration_1 -373
#define member_declaration_1 -374
#define member_declarator_list_1 -375
#define member_declarator_list_5 -376
#define direct_declarator_4 -377
#define direct_declarator_5 -378
#define member_declaration_5 -379
#define direct_declarator_1 -380
#define direct_declarator_8 -381
#define member_specification_2 -382
#define primary_expression_1 -383
#define direct_declarator_6 -384
#define direct_declarator_7 -385
#define postfix_expression_1 -386
#define postfix_expression_2 -387
#define primary_expression_4 -388
#define modulus_expression -399
#define postfix_dot_expression -400
#define postfix_arrow_expression -401
#define unary_op -402
#define ctor_function_definition -403
#define unary_sizeof -404
#define unary_star -405
#define unary_address -406
#define shift_left -407
#define shift_right -408
#define return_statement -409
#define member_declaration_3 -410
#define member_declaration_6 -411
#define sub_expression -412
#define div_expression -413
#define relational_lt -414
#define relational_gt -415
#define relational_lteq -416
#define relational_gteq -417
#define equality_eq -418
#define equality_neq -419
#define unary_plusplus -420
#define unary_minusminus -421
#define case_statement -422
#define default_statement -423
#define if_statement -424
#define ifelse_statement -425
#define switch_statement -426
#define while_statement -427
#define do_statement -428
#define for_statement -429
#define break_statement -430
#define continue_statement -431
#define goto_statement -432
#define postfix_plusplus -433
#define postfix_minusminus -434
